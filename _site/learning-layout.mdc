🏗 Recursive Learning - UX & Layout Specification

📌 Purpose
This document defines the HTML and CSS structure for our learning layout pages to ensure a consistent UX across:
- Intake Forms
- Learning Chat (Roleplay, AI Interviews)
- Export & Review Functions
- Embedded Storyline & Slide-based Content

The design prioritizes:
- Event-Driven Architecture: Components communicate only through events
- Consistency: UI elements behave predictably across layouts
- Accessibility: High contrast, scalable fonts, and semantic structure
- Embed Compatibility: Maintains aspect ratio for Storyline/slides

🎨 Component Architecture

1. **Affirmations Component**
```javascript
// State
{
    tos: boolean,
    norms: boolean,
    acknowledge: boolean
}

// Events
affirmationStateChange -> { state, complete }
```

2. **Chat Component**
```javascript
// State
{
    messageCount: number,
    threadId: string|null,
    messages: Array<Message>
}

// Events
chatStateChange -> { trigger, messageCount, threadId, lastMessage }
```

3. **Footer Component**
```javascript
// State
{
    mode: 'welcome'|'chat',
    affirmationsComplete: boolean,
    messageCount: number
}

// Events
navigationRequested -> { from, to }
showResourceTeaser -> At 3 messages
showAccountTeaser -> At 5 messages
```

🔳 Layout Framework
Each page type follows a common wireframe structure:

Left Navigation Column (20%):
- Progress indicators
- Navigation triggers
- Event listeners for state changes

Main Content Area (80%):
- Dynamic content based on mode
- Event emitters for user actions
- State-driven UI updates

🖥 Content Areas

1. **Welcome/Form Pages**
- Pure event emitters
- No direct button manipulation
- State-driven UI updates

2. **Chat Pages**
- Message history tracking
- Thread persistence
- Event-based navigation

3. **Export Pages**
- State-based content display
- Event-driven exports
- Progress tracking

🖼 Aspect Ratio & Embed Guidelines
Platform          | Ratio  | Max Width
-----------------|--------|----------
Storyline        | 16:10  | 1280px
Google Slides    | 16:10  | 1200px
Web App          | 16:10  | 1000px
Mobile           | Auto   | 100vw

🎯 CSS Architecture

```css
/* Theme Variables */
:root {
    --primary-color: #4a5af7;
    --surface-color: #f5f5f5;
    --text-color: #333;
    --border-color: #eee;
}

/* Layout Components */
.welcome-content {
    max-width: 600px;
    margin: 0 auto;
    padding: 2rem;
}

.chat-container {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.interaction-container {
    height: 180px;
    display: flex;
    align-items: center;
}

/* State Classes */
.enabled { opacity: 1; }
.disabled { opacity: 0.5; }
```

🔄 Event Flow
1. User Action -> Event Emission
2. State Update -> Event Dispatch
3. UI Update <- Event Listeners
4. Navigation <- State Changes

✅ Implementation Notes
- Use pure event emitters for all components
- Maintain local state management
- Implement predictable UI updates
- Follow event-driven architecture patterns

This MDC ensures a scalable, accessible, and event-driven UX for all learning interfaces.

🎨 Layout Framework Updates

Left Navigation Column (20%):
- Background: Uses brand color (var(--primary-color))
- Text: White for contrast (minimum 4.5:1 ratio)
- Active Tab: White underline via ::after pseudo-element
- Hover States: Subtle opacity change (0.9)

Active Tab Styling:
```css
#sidebar button.active {
    position: relative;
    color: #fff;
    background: none;
}

#sidebar button.active::after {
    content: "";
    position: absolute;
    left: 10%;
    right: 10%;
    bottom: 0;
    height: 3px;
    background-color: var(--accent-color);
}
```

Send Button Animation:
```css
@keyframes pulseSendButton {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

.send-button:hover {
    animation: pulseSendButton 0.8s infinite;
}
```

Embed Optimization:
- Removed radial background
- Clean white or transparent background
- Consistent contrast across platforms

Contrast Requirements:
- Text on brand colors: minimum 4.5:1 ratio
- Interactive elements: minimum 3:1 ratio
- White text (#fff) on dark brand colors
- Dark text (#000) on light brand colors

Message Bubbles:
```css
.message.assistant {
    background: var(--primary-color);
    color: #fff; /* Ensure contrast meets WCAG AA */
}

.message.user {
    background: var(--accent-color);
    color: #fff;
}
```

🔄 Platform-Specific Adjustments:
- Softr: Transparent background
- Storyline: Solid white background
- Web App: Optional radial gradient

// ... rest of existing content ... 